- name: setting server name for {{ component }}
  ansible.builtin.shell: set-hostname "{{ component }}"
  
- name: Install nodejs >= 20
  ansible.builtin.package:
    name: nodejs
    state: present
    
- name: create user expense
  ansible.builtin.user:
    name: expense
- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /app
    state: directory
    
- name: Download backend code from git repo and storing in temp
  ansible.builtin.get_url:
    url: https://expense-web-app.s3.amazonaws.com/{{ component }}.zip
    dest: /tmp/{{ component }}.zip
    
- name: Extract {{ component }}.zip into html 
  ansible.builtin.unarchive:
    src: /tmp/{{ component }}.zip
    dest: /app
    remote_src: yes

- name: Install {{ component }} node.js package.
  community.general.npm:
    name: "{{ component }}"
    path: /app
    
- name: copy backend file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
    owner: expense
    group: expense
    mode: '0775'
  
- name: installing {{component }} server
  ansible.builtin.package:
    name: mysql-server
    state: present

- name: installing dependecies for mysql
  ansible.builtin.yum:
    name: python3-PyMySQL
    state: present
#- name: injecting schema
# mysql_db:
#   name: all
#   state: import
#   target: /app/schema/backend.sql
#   login_host: 172.31.43.131
#   login_user: root
#   login_password: ExpenseApp@1

- name: installing {{component }} server
  ansible.builtin.shell: mysql -h 172.31.36.109 -uroot -pExpenseApp@1 < /app/schema/backend.sql

- name: Start and enable service "{{ component }}"
  service:
    name: backend
    state: reloaded
    enabled: yes

- name: Start and enable service "{{ component }}"
  service:
    name: backend
    state: restarted
    
   