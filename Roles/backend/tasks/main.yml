- name: setting server name for {{ component }}
  ansible.builtin.shell: set-hostname "{{ component }}"

- name: Remove existing Node.js version
  yum:
    name: nodejs
    state: absent

- name: Add NodeSource repository for Node.js 20
  shell: curl -fsSL https://rpm.nodesource.com/setup_20.x | bash -

- name: Install Node.js 20
  yum:
    name: nodejs
    state: present

       
- name: create user expense
  ansible.builtin.user:
    name: expense

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /app
    state: directory
    recurse: yes
    owner: expense
    group: expense
    mode: '0775'
    
- name: Download backend code from git repo and storing in temp
  ansible.builtin.get_url:
    url: https://expense-web-app.s3.amazonaws.com/{{ component }}.zip
    dest: /tmp/{{ component }}.zip
    
- name: Extract {{ component }}.zip into /app
  ansible.builtin.unarchive:
    src: /tmp/{{ component }}.zip
    dest: /app
    remote_src: yes

- name: Install {{ component }} node.js package.
  community.general.npm:
    path: /app
    state: present
    
    
- name: copy backend file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
   
  
- name: installing {{component }} server
  ansible.builtin.package:
    name: mysql-server
    state: present

- name: installing dependecies for mysql
  ansible.builtin.pip:
    name: 
    - PyMySQL
    - cryptography
    executable: /usr/bin/pip3.11


- name: install pymysql and cryptography
  ansible.builtin.shell: pip3.11 install PyMySQL cryptography

- name: checking pymysql and cryptography installed or not using shell
  ansible.builtin.shell: pip3.11 list | grep -E 'PyMySQL|cryptography'

# - name: injecting schema
#   community.mysql.mysql_db:
#    name: all
#    state: import
#    target: /app/schema/backend.sql
#    login_host: mysql.eternallearnings.shop
#    login_user: root
#    login_password: ExpenseApp@1

- name: injecting schema using mysql
  ansible.builtin.shell: mysql -h mysql.eternallearnings.shop -uroot -pExpenseApp@1 < /app/schema/backend.sql

- name: Restart service 
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: backend
    
   